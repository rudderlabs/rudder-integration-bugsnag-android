name: Draft new release

on:
  workflow_dispatch

jobs:
  draft-new-release:
    name: Draft a new release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/feature/') || startsWith(github.ref, 'refs/heads/hotfix/') || startsWith(github.ref, 'refs/heads/fix/')
    steps:
      - name: Checkout source branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set Node 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'

      # In order to make a commit, we need to initialize a user.
      # You may choose to write something less generic here if you want, it doesn't matter functionality wise.
      - name: Initialize mandatory git config
        run: |
          git config user.name "GitHub actions"
          git config user.email noreply@github.com

      # Calculate the next release version based on conventional semantic release
      - name: Create release branch
        id: create-release
        run: |
          source_branch_name=${GITHUB_REF##*/}
          release_type=release
          grep -q "hotfix/" <<< "${GITHUB_REF}" && release_type=hotfix-release
          git fetch origin master --depth=1
          git merge origin/master
          current_version=$(cat gradle.properties | grep "VERSION_NAME" | cut -d'=' -f2)
          
          npm ci
           npx standard-version --skip.commit --skip.tag --skip.changelog
          new_version=$(cat gradle.properties | grep "VERSION_NAME" | cut -d'=' -f2)
          git reset --hard

          branch_name="${release_type}/${new_version}"

          echo "Source branch for new release is $source_branch_name"
          echo "Current version is $current_version"
          echo "Release type is $release_type"
          echo "New version is $new_version"
          echo "New release branch name is $branch_name"
          git checkout -b "$branch_name"
          git push --set-upstream origin "$branch_name"
          
          echo "::set-output name=source_branch_name::$source_branch_name"
          echo "::set-output name=branch_name::$branch_name"
          echo "::set-output name=new_version::$new_version"

      - name: Update changelog & bump version
        id: finish-release
        run: |
          npm ci
          npx standard-version
          git add . && git commit --amend --no-edit

      - name: Push new version in release branch & tag
        
        run: |
          git push --follow-tags

      - name: Create pull request into main
        uses: repo-sync/pull-request@v2
        with:
          source_branch: ${{ steps.create-release.outputs.branch_name }}
          destination_branch: 'master'
          github_token: ${{ secrets.PAT }}
          pr_title: "chore(release): pulling ${{ steps.create-release.outputs.branch_name }} into ${{ steps.create-release.outputs.main_branch }}"
          pr_body:  ":crown: *An automated PR*"
          pr_reviewer: 'itsdebs'
